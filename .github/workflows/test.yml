###############################################
#     Scope:
#       This Action is to show the
#       manipulation of the outputs from each job.
#
#     Problem Statement:
#       When using GITHUB ACTIONS Matrix it
#       was hard to persist some sort of data
#       to handle in the output/result of the run
#
#     Potential Caveats:
#       This may not work when the matrix steps
#       are run in parallel
################################################
name: Test

on:
  # workflow_dispatch:
  # push:
  # issues:
  #   types:
  #     - opened
  #     - edited
  issue_comment:
    types: [created, edited, deleted]

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        words: ["hello", "bye", "sup"]
    steps:
      - name: Say Hello
        run: echo "Hello, World! ${{ matrix.words }}" >> results.txt
      - uses: actions/github-script@v7
        id: matrix-output
        with:
          script: |
            console.log(context)
            console.log(JSON.stringify(context.payload.issue.labels))
      - uses: actions/github-script@v7
        id: new
        with:
          script: |
            const sanitizedLabels = context.payload.issue.labels.filter(label => label.name !== "success" || label.name != "failure")
            console.log(sanitizedLabels)
            const labels = sanitizedLabels.map(label => label.name)
            // const labels = Object.entries(sanitizedLabels).map(([key, value]) => ({ name: value.name }));
            console.log("--------LABELS--------")
            console.log(labels)
            console.log("--------END OF LABELS--------")
            github.rest.issues.addLabels({
              owner: "AzySir",
              repo: "github-actions-example",
              issue_number: context.payload.issue.number,
              labels
            })
